//================================================================================
// シーンマネージャー
//--------------------------------------------------------------------------------
// SceneManager.cpp
//--------------------------------------------------------------------------------
// 2021 11/29 SatoKen フェード処理追加＆コメント追加
//================================================================================


//********************************************************************************
// インクルード部
//********************************************************************************
#include "SceneManager.h"
#include "GameScene.h"
#include "TitleScene.h"

#include "fade.h"


//********************************************************************************
// グローバル変数
//********************************************************************************
static SceneBase *g_pScene;		// シーン情報
static SCENE_TYPE g_Type;		// 現在のシーンタイプ


//================================================================================
// 初期化
//================================================================================
HRESULT InitSceneManager()
{
	HRESULT hr = S_OK;

	// 最初のシーン生成
	g_pScene = new TitleScene;
	g_Type = SCENE_TITLE;

	// シーン初期化
	hr = g_pScene->Init();

	// フェード初期化
	hr = InitFade();
	if (FAILED(hr))
		return hr;

	return hr;
}

//================================================================================
// 終了
//================================================================================
void UninitSceneManager()
{
	// シーン終了処理
	g_pScene->Uninit();

	// フェード終了処理
	UninitFade();
}

//================================================================================
// 更新
//================================================================================
void UpdateSceneManager()
{
	// シーン更新
	g_pScene->Update();

	// フェード更新
	UpdateFade();
}

//================================================================================
// 描画
//================================================================================
void DrawSceneManager()
{
	// シーン描画
	g_pScene->Draw();

	// フェード描画
	DrawFade();	
}

//=============================================================================
// シーン変更関数
// 引数：SCENE_TYPE		次のシーンを引数に
//=============================================================================
void SelectScene(SCENE_TYPE type)
{
	// シーン情報削除
	if (g_pScene != nullptr)
	{
		// 終了処理
		g_pScene->Uninit();

		// 中身削除
		delete g_pScene;
	}


	// 次のシーン生成
	switch (type)
	{
	case SCENE_TITLE:
		g_pScene = new TitleScene();
		g_Type = SCENE_TITLE;
		break;

	case SCENE_GAME:
		g_pScene = new GameScene();
		g_Type = SCENE_GAME;
		break;

	default:
		break;
	}

	// シーン初期化
	g_pScene->Init();
}

//=============================================================================
// 現在シーンタイプ取得関数
//=============================================================================
SCENE_TYPE GetSceneType()
{
	return g_Type;
}